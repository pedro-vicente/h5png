cmake_minimum_required(VERSION 3.1)
project (h5png)
set (CMAKE_CXX_STANDARD 11)
set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH};/usr/lib/i386-linux-gnu;)

find_library(PNG_LIBRARY NAMES png)
if(NOT PNG_LIBRARY)
  message(FATAL_ERROR "png library not found")
else()
  message("-- Found png library at: " ${PNG_LIBRARY})
endif()

find_path(HDF5_INCLUDE hdf5.h HINTS "/usr/include/hdf5/serial")
if(NOT HDF5_INCLUDE)
  message(FATAL_ERROR "hdf5.h header file not found")
else()
  message("-- Found hdf5.h header file at: " ${HDF5_INCLUDE}/hdf5.h)
endif()

find_library(HDF5_LIBRARY NAMES hdf5 HINTS "${CMAKE_PREFIX_PATH}/hdf5/serial")
if(NOT HDF5_LIBRARY)
  message(FATAL_ERROR "hdf5 library not found")
else()
  message("-- Found hdf5 library at: " ${HDF5_LIBRARY})
endif()

find_library(HDF5_HL_LIBRARY NAMES hdf5_hl HINTS HINTS "${CMAKE_PREFIX_PATH}/hdf5/serial")
if(NOT HDF5_HL_LIBRARY)
  message(FATAL_ERROR "hdf5 high level library not found")
else()
  message("-- Found hdf5 high level library at: " ${HDF5_HL_LIBRARY})
endif()

find_library(ZLIB_LIBRARY NAMES z)
if(NOT ZLIB_LIBRARY)
  message(FATAL_ERROR "zlib library not found")
else()
  message("-- Found zlib library at: " ${ZLIB_LIBRARY})
endif()

find_library(SZIP_LIBRARY NAMES sz)
if(NOT SZIP_LIBRARY)
  message(FATAL_ERROR "szip library not found")
else()
  message("-- Found szip library at: " ${SZIP_LIBRARY})
endif()

if (MSVC)
  add_definitions( "/D_CRT_SECURE_NO_WARNINGS /D_WINSOCK_DEPRECATED_NO_WARNINGS" )
  if (STATIC_CRT)
    message("-- Building with static runtime library")
	set(CMAKE_CXX_FLAGS_DEBUG "/D_DEBUG /MTd /Zi /Ob0 /Od /RTC1")
    set(CMAKE_CXX_FLAGS_MINSIZEREL     "/MT /O1 /Ob1 /D NDEBUG")
    set(CMAKE_CXX_FLAGS_RELEASE        "/MT /O2 /Ob2 /D NDEBUG")
    set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/MT /Zi /O2 /Ob1 /D NDEBUG")
  endif()  
  set(WINSOCK_LIBRARY ws2_32.lib)
endif(MSVC)

include_directories(${PNG_INCLUDE} ${HDF5_INCLUDE} ${HDF5_HL_INCLUDE})
set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} ${PNG_LIBRARY} ${HDF5_LIBRARY} ${HDF5_HL_LIBRARY} ${ZLIB_LIBRARY} ${SZIP_LIBRARY})
set(SOURCES h5png.cc h5png.hh)
add_executable(h5png h5png_main.cc ${SOURCES})
target_link_libraries (h5png ${PNG_LIBRARY} ${HDF5_HL_LIBRARY} ${HDF5_LIBRARY} ${ZLIB_LIBRARY} ${SZIP_LIBRARY} ${WINSOCK_LIBRARY})

